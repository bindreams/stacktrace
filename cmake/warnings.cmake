cmake_minimum_required(VERSION 3.14.0)

function(target_compile_warnings TARGET)
    if (CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
        set(MS_CLI 1)
        set(GNU_CLI 0)
    elseif(CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "GNU")
        set(MS_CLI 0)
        set(GNU_CLI 1)
    endif()

    foreach(ARG IN LISTS ARGN)
        if(ARG STREQUAL "treat_as_errors")
            if (GNU_CLI)
                target_compile_options(${TARGET} PRIVATE -Werror)
            elseif(MS_CLI)
                target_compile_options(${TARGET} PRIVATE /WX)
            endif()
        elseif(ARG STREQUAL "gnu_all")
            if (GNU_CLI)
                target_compile_options(${TARGET} PRIVATE -Wall)
            endif()
        elseif(ARG STREQUAL "gnu_extra")
            if (GNU_CLI)
                target_compile_options(${TARGET} PRIVATE -Wextra)
            endif()
        elseif(ARG STREQUAL "ms_1")
            if (MS_CLI)
                target_compile_options(${TARGET} PRIVATE /W1)
            endif()
        elseif(ARG STREQUAL "ms_2")
            if (MS_CLI)
                target_compile_options(${TARGET} PRIVATE /W2)
            endif()
        elseif(ARG STREQUAL "ms_3")
            if (MS_CLI)
                target_compile_options(${TARGET} PRIVATE /W3)
            endif()
        elseif(ARG STREQUAL "ms_4")
            if (MS_CLI)
                target_compile_options(${TARGET} PRIVATE /W4)
            endif()
        else()
            message(WARNING "Unknown warning flag ignored: \"${ARG}\"")
        endif()
    endforeach()
endfunction()
